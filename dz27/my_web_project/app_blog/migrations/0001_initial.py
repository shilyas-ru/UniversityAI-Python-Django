# Generated by Django 4.1.5 on 2023-01-21 06:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Заголовок статьи', max_length=100)),
                ('body', models.TextField(help_text='Текст (тело) статьи')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата создания статьи')),
                ('published', models.DateTimeField(blank=True, default=None, help_text='Дата опубликования статьи', null=True)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата обновления (изменения) статьи')),
                ('status', models.CharField(choices=[('p', 'Published'), ('d', 'Draft'), ('h', 'Hidden')], default='d', help_text='Статус статьи (Published/опубликовано, Draft/черновик, Hidden/скрыто)', max_length=1)),
                ('slug', models.SlugField(blank=True, help_text='URL для статьи (должен быть уникальным)', max_length=250, null=True, unique=True)),
                ('author', models.ForeignKey(default=None, help_text='Автор статьи', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование категории', max_length=50)),
                ('slug', models.SlugField(blank=True, help_text='URL для указанной категории (должен быть уникальным)', max_length=250, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование тэга', max_length=50)),
                ('slug', models.SlugField(blank=True, help_text='URL для указанного тэга (должен быть уникальным)', max_length=250, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Toc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование пункта оглавления', max_length=100)),
                ('path', models.CharField(help_text='Составной путь для каждого из пунк-тов оглавления.', max_length=100)),
                ('menu_order', models.IntegerField(help_text='Указывается порядок в пределах своего уровня')),
                ('slug', models.SlugField(blank=True, help_text='URL для пункта оглавления (должен быть уникальным)', max_length=250, null=True, unique=True)),
                ('article', models.ForeignKey(blank=True, default=None, help_text='Ссылка на статью', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_blog.articles')),
            ],
        ),
        migrations.AddField(
            model_name='articles',
            name='category',
            field=models.ForeignKey(blank=True, default=None, help_text='Рубрика, к которой относится статья', null=True, on_delete=django.db.models.deletion.CASCADE, to='app_blog.categories'),
        ),
        migrations.AddField(
            model_name='articles',
            name='tag',
            field=models.ManyToManyField(help_text='Тэги, связанные со статьёй', to='app_blog.tags'),
        ),
    ]
